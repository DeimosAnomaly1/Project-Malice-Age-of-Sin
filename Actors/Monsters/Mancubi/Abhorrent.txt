Class PM_Abhorrent : PMDeathMonsterBase
{
 int deathwither;
 Default
 {
 PMMonsterBase.CodexLore
 "Gluttonous and unceasing, these mancubi have engorged themselves with far too many souls to use against you.
  Their cannons can condense all of the essence stored into one singular point, allowing them to launch massive, homing, but slow-moving souls at you.
  They can also fire them in barrages, though this stunts the condensation process and only lets the cannons launch smaller, but faster non-homing souls.";
 health 600;
 Radius 48;
 Height 64;
 painchance 100;
 Speed 5;
 Scale 1.1;
 Mass 1000;
 SeeSound "Abhorrent/Sight";
 PainSound "Abhorrent/Pain";
 DeathSound "Abhorrent/Death";
 ActiveSound "Abhorrent/Active";
 BloodType "PM_DeathBloodBase";
 BloodColor "Black";
 Species "Mancubus";
 StencilColor "Blue";
 +DONTHARMSPECIES
 +MissileMore
 MinMissileChance 2000;
 //DropItem "RagePoint1"
 Obituary "An Abhorrent quenched its hunger for %o's soul.";
 Tag "Abhorrent";
 +DONTHARMCLASS
 TeleFogSourceType "PM_SmallDemonicTeleportFog";
 TeleFogDestType "PM_DemonicTeleportFog";
 }
 
 	override void PostBeginPlay()
	{
	 deathwither = random(35,75);
	 tex[0] = TexMan.CheckForTexture("DUSTC0",TexMan.Type_Sprite);
	 tex[1] = TexMan.CheckForTexture("GNSMK0",TexMan.Type_Sprite);
	 tex[2] = TexMan.CheckForTexture("DTPRB0",TexMan.Type_Sprite);
	 tex[3] = TexMan.CheckForTexture("SPKOS0",TexMan.Type_Sprite);
	 Super.PostBeginPlay();
	}
	
	TextureID tex[4];

    void PM_AbhorrentWither()
	{
	 A_SpawnParticleEx("545454",tex[1],style: STYLE_None,flags: SPF_ROLL|SPF_RELATIVE,lifetime: random(50,160),size: frandom(30,100),xoff: frandom(-40,40),yoff: frandom(-40,40),velx: frandom(-1,1),vely: frandom(-1,1),velz: frandom(0,2),startalphaf: frandom(0.2,0.95)
	 ,fadestepf: -1,sizestep: frandom(-0.8,0.8),startroll: random(-180,180),rollvel: frandom(-0.3,0.3));
	 A_SpawnParticleEx("848484",tex[0],style: STYLE_Normal,flags: SPF_RELATIVE|SPF_ROLL,lifetime: random(90,270),size: frandom(1,32),xoff: random(-40,40),yoff: random(-40,40),zoff: 5,velx: frandom(-1,1),vely: frandom(-1,1),velz: frandom(0.3,4),startalphaf: 1.0
	 ,fadestepf: -0.05,sizestep: frandom(-0.1,-1),startroll: random(-180,180),rollvel: random(-4,4));
	}

	void PM_AbhorrentBarrageCharge()
	{
	 A_SpawnParticleEx("",tex[2],style: STYLE_Add,flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,lifetime: random(500,820),size: frandom(10,320),xoff: frandom(20,25),yoff: 34,zoff: frandom(-3.5,3.5) + 25,startalphaf: 0.07,fadestepf: -1,startroll: random(-180,180));
	 A_SpawnParticleEx("",tex[2],style: STYLE_Add,flags: SPF_ROLL|SPF_RELATIVE|SPF_FULLBRIGHT,lifetime: random(500,820),size: frandom(10,320),xoff: frandom(20,25),yoff: -34,zoff: frandom(-3.5,3.5) + 25,startalphaf: 0.07,fadestepf: -1,startroll: random(-180,180));
	 A_SpawnParticleEx("",tex[3],style: STYLE_Add,flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,lifetime: random(1,50),size: random(3,15),xoff: frandom(20,25),yoff: 34,zoff: frandom(-3.5,3.5) + 25,velx: frandom(-0.95,0.95),vely: frandom(-0.95,0.95),velz: frandom(-0.95,0.95),startalphaf: frandom(0.25,0.9),fadestepf: 0,sizestep: 0,startroll: random(-180,180),rollvel: frandom(-30,30));
	 A_SpawnParticleEx("",tex[3],style: STYLE_Add,flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,lifetime: random(1,50),size: random(3,15),xoff: frandom(20,25),yoff: -34,zoff: frandom(-3.5,3.5) + 25,velx: frandom(-0.95,0.95),vely: frandom(-0.95,0.95),velz: frandom(-0.95,0.95),startalphaf: frandom(0.25,0.9),fadestepf: 0,sizestep: 0,startroll: random(-180,180),rollvel: frandom(-30,30));
	}

  States
 {
  Spawn:
    ABHR A 10 PM_Look();
    Loop;
  Look:
	TNT1 A 0 { bSHOOTABLE = true; }
	TNT1 A 0 { bNOPAIN = false; }
	TNT1 A 0 A_StartSound("MancubStep");
    ABHR AAA 2 PM_LookingForPlayer();
	ABHR BBBCCC 2 PM_LookingForPlayer();
    TNT1 A 0 A_JumpIfTargetInLOS("Spotted",270,JLOSF_DEADNOJUMP);
	TNT1 A 0 A_StartSound("MancubStep");
	ABHR DDD 2 PM_LookingForPlayer();
	ABHR EEEFFF 2 PM_LookingForPlayer();
    Loop;
  See:
	TNT1 A 0 { bSHOOTABLE = true; }
	TNT1 A 0 { bNOPAIN = false; }
	TNT1 A 0 A_Jump(30,"Phase");
	TNT1 A 0 A_StartSound("MancubStep");
    ABHR AAA 3 A_Chase();
	ABHR BBBCCC 3 A_Chase();
	TNT1 A 0 A_StartSound("MancubStep");
	ABHR DDD 3 A_Chase();
	ABHR EEEFFF 3 A_Chase();
    Loop;
  Spotted:
    TNT1 A 0 A_Jump(256,"SpotMissile","Roar");
    Goto See;
  Roar:
    TNT1 A 0 PM_AlertSound();
  SpotMissile:
    ABHR G 5 A_FaceTarget();
   Goto Missile;
  Missile:
    TNT1 A 0 A_Jump(75,"SoulBreath");
	TNT1 A 0 A_Jump(50,"Missile3");
	TNT1 A 0 { bNOPAIN = true; }
	ABHR G 1 A_StartSound("Abhorrent/Attack",CHAN_6);
	ABHR GGGGGGG 5 A_FaceTarget();
	TNT1 A 0 A_StartSound("GenericMancShot",volume:0.75);
	TNT1 A 0 A_StartSound("Abhor/BarrageLaunch",10,CHANF_OVERLAP,volume:1,pitch:frandom(0.15,0.45));
    ABHR H 6 Light("SoulHarvesterBall2") 
	{
	A_SpawnProjectile("PM_AbhorBall", 28,-34,22);
	A_SpawnProjectile("PM_AbhorBall", 28, 34,-22);
	}
	TNT1 A 0 { bNOPAIN = false; }
	ABHR IG 12 A_FaceTarget();
	Goto See;
  SoulBreath:
    TNT1 A 0 { bNOPAIN = true; }
    ABHR GGII 3 A_FaceTarget();
    TNT1 A 0 A_StartSound("Abhor/BallWhiz");
    ABHR IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII random(1,2) Light("SoulHarvesterBall2")
    {
    A_FaceTarget();
    A_SpawnProjectile("PM_AbhorSoulVomit",40,-8,random(-10,10),CMF_OFFSETPITCH,random(-5,5));
    }
	TNT1 A 0 { bNOPAIN = false; }
    ABHR IG 5 A_FaceTarget();
    Goto See;
  Missile3:
    TNT1 A 0 { bNOPAIN = true; }
  ABHR G 1 A_StartSound("Abhor/BarrageCharge",25,pitch:frandom(0.75,1.0));
  TNT1 A 0 { pm_attackloop = random(4,7); }
  ABHR HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH 1 Light("SoulHarvesterBall1") 
  {
  A_FaceTarget();
  PM_AbhorrentBarrageCharge();
  }
  Mis3Loop:
    ABHR H 3 Light("SoulHarvesterBall2") 
    {
    A_StartSound("GenericMancShot");
    A_SpawnProjectile("PM_AbhorBarrageBall", 28, 34,random(-5,5),CMF_AIMDIRECTION,pitch+frandom(-1,1));
	A_SpawnProjectile("PM_AbhorBarrageBall", 28, 34,random(-3,3),CMF_AIMDIRECTION,pitch+frandom(-1,1));
	A_FaceTarget(0.65,3,0,0);
    }
    ABHR IG 2 A_FaceTarget(0.65,3,0,0);
    TNT1 A 0 { bNOPAIN = false; }
    ABHR H 3 Light("SoulHarvesterBall2") 
    {
  if(pm_attackloop < 0)
  SetStateLabel("Mis3End");
    A_StartSound("GenericMancShot");
    A_SpawnProjectile("PM_AbhorBarrageBall", 28, -34,random(-5,5),CMF_AIMDIRECTION,pitch+frandom(-1,1));
	A_SpawnProjectile("PM_AbhorBarrageBall", 28, -34,random(-3,3),CMF_AIMDIRECTION,pitch+frandom(-1,1));
	A_FaceTarget(0.65,3,0,0);
    pm_attackloop--;
    }
    ABHR IG 3 A_FaceTarget(0.65,3,0,0);
    Loop;
  Mis3End:
  ABHR IG 12 A_FaceTarget(0.65,3,0,0);
  Goto See;
  Phase:
	TNT1 AAA 0 A_SpawnProjectile("AbhorBallExplode",random(10,45),0,random(0,360),2,random(0,360));
	ABHR G 5 A_FaceTarget();
	TNT1 AAA 0 A_SpawnProjectile("AbhorBallExplode",random(10,45),0,random(0,360),2,random(0,360));
	TNT1 A 0 A_SetSpeed(15);
	TNT1 A 0 A_SetRenderStyle(0.8,STYLE_Add);
	TNT1 A 0 A_StartSound("Abhor/Phase",CHAN_7);
	TNT1 A 0 { bSHOOTABLE = false; }
	ABHR UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 1 Bright Light("SoulHarvesterBall1")
	{
		A_Wander();
		A_SpawnItemEx("PM_GenericPhaseGhost",0,0,0,0,0,0,0,SXF_TRANSFERSTENCILCOL|SXF_TRANSFERSPRITEFRAME|SXF_TRANSFERSCALE);
	}
	TNT1 A 0 A_SetRenderStyle(0.8,STYLE_Normal);
	TNT1 A 0 A_SetSpeed(5);
	TNT1 A 0 { bSHOOTABLE = true; }
	TNT1 AAAAA 0 A_SpawnProjectile("AbhorBallExplode",random(10,45),0,random(0,360),2,random(0,360));
	ABHR J 10 A_FaceTarget();
	Goto See;
  Pain:
    ABHR J 1;
	TNT1 A 0 { bSHOOTABLE = true; }
	TNT1 A 0 A_StartSound("MancubStep");
    ABHR J 13 A_Pain;
    Goto See;
  Death:
	   ABHR K 1;
	   ABHR KKKKKK 1;
     ABHR L 1 PM_Scream();
	   ABHR LLLLLL 1;
     ABHR MMMMM 1;
     ABHR N 1 A_SpawnProjectile("PM_AbhorSmallBall",10,0,random(0,360),CMF_OFFSETPITCH | CMF_TRACKOWNER,random(-80,80));
	   ABHR NNN 1
	   {
	   A_SpawnItemEx("PM_DeathBloodSoul",xofs:random(-10,10),yofs:random(-15,15),zofs:random(1,20),flags:SXF_NOCHECKPOSITION,failchance:75);
	   }
	   ABHR O 1 A_SpawnProjectile("PM_AbhorSmallBall",10,0,random(0,360),CMF_OFFSETPITCH | CMF_TRACKOWNER,random(-80,80));
	   ABHR OOO 1
	   {
	   A_SpawnItemEx("PM_DeathBloodSoul",xofs:random(-10,10),yofs:random(-15,15),zofs:random(1,20),flags:SXF_NOCHECKPOSITION,failchance:75);
	   }
	   ABHR P 1 A_SpawnProjectile("PM_AbhorSmallBall",10,0,random(0,360),CMF_OFFSETPITCH | CMF_TRACKOWNER,random(-80,80));
	   ABHR PPP 1
	   {
	   A_SpawnItemEx("PM_DeathBloodSoul",xofs:random(-10,10),yofs:random(-15,15),zofs:random(1,20),flags:SXF_NOCHECKPOSITION,failchance:75);
	   }
	   TNT1 A 0 A_StartSound("Corpse/FallMetal",CHAN_6);
	   ABHR Q 1 A_SpawnProjectile("PM_AbhorSmallBall",10,0,random(0,360),CMF_OFFSETPITCH | CMF_TRACKOWNER,random(-80,80));
	   ABHR Q 3;
	   ABHR R 1 A_SpawnProjectile("PM_AbhorSmallBall",10,0,random(0,360),CMF_OFFSETPITCH | CMF_TRACKOWNER,random(-80,80));
	   ABHR R 3;
       ABHR S 1 A_NoBlocking;
	   ABHR S 3;
  DeathLoop:
       ABHR T 1
	   {
	   if(deathwither < 0)
	   SetStateLabel("DeathEnd");
	   for(int i=random(1,3);i>0;i--)
	   PM_AbhorrentWither();
	   deathwither--;
	   }
       Loop;
   DeathEnd:
       ABHR TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT 1
	   {
	   for(int i=random(1,3);i>0;i--)
	   PM_AbhorrentWither();
	   A_FadeOut(0.015);
	   }
	   Wait;
  }
}

Class PM_AbhorBall : PM_FatShotBase
{
    Default
    {
    Radius 8;
    Height 6;
    Scale 1.0;
    Speed 11;
	DamageFunction (random(40,40));
	DamageType "Soul";
    Renderstyle "Add";
    seesound "Abhor/BallWhiz";
	deathsound "Abhor/BallExp";
	Decal "PM_DeathSoulScorchBig";
    PROJECTILE;
    +SEEKERMISSILE
    }
	
	override void PostBeginPlay()
	{
	 tex[0] = TexMan.CheckForTexture("DTPRB0",TexMan.Type_Sprite);
	 tex[1] = TexMan.CheckForTexture("GNSMK0",TexMan.Type_Sprite);
	 tex[2] = TexMan.CheckForTexture("SPKOS0",TexMan.Type_Sprite);
	}

    TextureID tex[3];

  States
  {
  Spawn:
    TNT1 A 0 A_SeekerMissile(0,0,SMF_PRECISE);
	TNT1 A 0
	{
	  A_SeekerMissile(0,0,SMF_PRECISE);
	 for(int i=random(2,4);i>0;i--)
	  A_SpawnParticleEx("0B3D94",tex[1],style: STYLE_Add,flags: SPF_ROLL|SPF_RELATIVE,lifetime: random(15,45),size: random(40,65),xoff: -5,velx: frandom(-0.45,0.45),vely: frandom(-0.45,0.45),velz: frandom(-0.45,0.45),accelx: frandom(0.25,0.95),accely: frandom(-0.15,0.15),accelz: frandom(-0.35,0.35),startalphaf: frandom(0.25,0.65),fadestepf: -1,sizestep: 2,startroll: random(-180,180),rollvel: random(-3,3));
	  A_SpawnParticleEx("",tex[0],style: STYLE_Add,flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,lifetime: random(5,15),size: 280,startalphaf: 1.0,fadestepf: 0,sizestep: -20,startroll: random(-180,180));
	 for(int i=random(10,20);i>0;i--)
	  A_SpawnParticleEx("",tex[2],style: STYLE_Add,flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,lifetime: random(1,100),size: frandom(3,20),xoff: frandom(-2,2),yoff: frandom(-2,2),zoff: frandom(-2,2),velx: frandom(1,10),vely: frandom(-3,3),velz: frandom(-0.1,4),accelx: frandom(-0.005,0.005),accely: frandom(-0.005,0.005),accelz: frandom(-0.0,-0.3),startalphaf: 1.0,fadestepf: -0.5,sizestep: -0.2,startroll: random(-180,180));
	}
  Go:
    ABHB AABB 1 Bright Light("SoulHarvesterBall1")
	{
	  A_SeekerMissile(1,1,SMF_PRECISE);
	  A_SpawnParticleEx("61A9FF",tex[2],style: STYLE_Add,flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,lifetime: random(10,50),size: frandom(0.1,10),xoff: random(-7,0),yoff: random(-5,5),zoff: random(-5,5),velx: frandom(-0.6,0.6),vely: frandom(-0.6,0.6),velz: frandom(-0.6,1),startalphaf: 1.0, fadestepf: -0.5,sizestep: -0.2,startroll: random(-180,180));
	  A_SpawnParticleEx("",tex[0],style: STYLE_Add,flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,lifetime: 1,size: frandom(60.0,175.0),xoff: -8,startalphaf: frandom(0.2,0.70),startroll: random(-180,180));
      A_SpawnParticleEx("",tex[0],style: STYLE_Add,flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL,lifetime: random(1,2),size: random(45,80),xoff: 5,startalphaf: frandom(0.15,0.85),startroll: random(-180,180));
	  A_SpawnParticleEx("0B3D94",tex[1],style: STYLE_Add,flags: SPF_ROLL|SPF_RELATIVE,lifetime: random(15,80),size: 65.0,xoff: -5,velx: frandom(-0.05,0.05),vely: frandom(-0.05,0.05),velz: frandom(-0.05,0.05),startalphaf: frandom(0.25,0.65),fadestepf: -1,startroll: random(-180,180),rollvel: random(-3,3));
	}
    Loop;
  Death:
	TNT1 A 0 A_SpawnItemEx("PM_BlueExplosionFlareSmall",0,0,0);
	TNT1 AAA 0 A_SpawnProjectile("AbhorBallExplode",0,0,random(0,360),2,random(0,360));
	TNT1 AAAAAAAA 0 A_SpawnProjectile("PM_AbhorSmallBall",0,0,random(0,360),CMF_OFFSETPITCH | CMF_TRACKOWNER,random(-80,80));
    SHBA CDEFGHIJKL 4 Bright Light("SoulHarvesterBall2");
    Stop;
  }
}

Class PM_AbhorBarrageBall : PM_FatShotBase
{
	int soulhspeed;
	int soulhdist;
    Default
	{
    Radius 5;
    Height 5;
    Scale 0.45;
    Speed 40;
	FastSpeed 60;
	DamageFunction (random(25,30));
	DamageType "Soul";
    Renderstyle "Add";
    seesound "Abhor/BarrageLaunch";
	deathsound "Abhor/BallExp";
	Decal "PM_DeathSoulScorchBig";
    PROJECTILE;
	WeaveIndexXY 10;
	}

	override void PostBeginPlay()
	{
	 tex[0] = TexMan.CheckForTexture("DTPRB0",TexMan.Type_Sprite);
	 tex[1] = TexMan.CheckForTexture("GNSMK0",TexMan.Type_Sprite);
	 tex[2] = TexMan.CheckForTexture("SPKOS0",TexMan.Type_Sprite);
	 soulhspeed = random(-3,3);
	 soulhdist = random(-5,5);
	  for(int i=random(2,4);i>0;i--)
	    A_SpawnParticleEx("0B3D94",tex[1],style: STYLE_Add,flags: SPF_ROLL|SPF_RELATIVE,lifetime: random(15,45),size: random(40,65),xoff: -5,velx: frandom(-0.45,0.45),vely: frandom(-0.45,0.45),velz: frandom(-0.45,0.45),accelx: frandom(0.25,0.95),accely: frandom(-0.15,0.15),accelz: frandom(-0.35,0.35),startalphaf: frandom(0.25,0.65),fadestepf: -1,sizestep: 2,startroll: random(-180,180),rollvel: random(-3,3));
	    A_SpawnParticleEx("",tex[0],style: STYLE_Add,flags: SPF_RELATIVE|SPF_ROLL|SPF_FULLBRIGHT,lifetime: random(5,15),size: 280,startalphaf: 1.0,fadestepf: 0,sizestep: -20,startroll: random(-180,180));
	  for(int i=random(5,8);i>0;i--)
	    A_SpawnParticleEx("",tex[2],style: STYLE_Add,flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,lifetime: random(1,100),size: frandom(3,15),xoff: frandom(-2,2),yoff: frandom(-2,2),zoff: frandom(-2,2),velx: frandom(1,10),vely: frandom(-3,3),velz: frandom(-0.1,4),accelx: frandom(-0.005,0.005),accely: frandom(-0.005,0.005),accelz: frandom(-0.0,-0.3),startalphaf: 1.0,fadestepf: -0.5,sizestep: -0.2,startroll: random(-180,180));
	}

    TextureID tex[3];

  States
  {
  Spawn:
   TNT1 A 0;
   TNT1 A 0 A_ScaleVelocity(frandom(0.35,1.00));
   TNT1 A 0 A_StartSound("Abhor/BarrageWhiz",3,CHANF_DEFAULT,0.75,pitch:frandom(0.8,1.3));
  Go:
    ABHB AABB 1 Bright Light("SoulHarvesterBall1")
	{
     A_SpawnParticleEx("",tex[0],style: STYLE_Add,flags: SPF_FULLBRIGHT|SPF_RELATIVE|SPF_ROLL,lifetime: random(1,2),size: random(45,80),xoff: 5,startalphaf: frandom(0.15,0.85),startroll: random(-180,180));
	 A_SpawnParticleEx("0B3D94",tex[1],style: STYLE_Add,flags: SPF_ROLL|SPF_RELATIVE,lifetime: random(15,40),size: 45.0,xoff: -5,velx: frandom(-0.05,0.05),vely: frandom(-0.05,0.05),velz: frandom(-0.05,0.05),startalphaf: frandom(0.25,0.65),fadestepf: -1,startroll: random(-180,180),rollvel: random(-3,3));
	 A_SpawnParticleEx("0B3D94",tex[2],style: STYLE_Add,flags: SPF_ROLL|SPF_RELATIVE,lifetime: random(15,90),size: random(15,45),xoff: frandom(-2,2),yoff: frandom(-2,2),zoff: frandom(-2,2),velx: frandom(-0.65,0.65),vely: frandom(-0.65,0.65),velz: frandom(-0.65,0.65),startalphaf: frandom(0.25,0.85),fadestepf: -1,startroll: random(-180,180),rollvel: random(-3,3));
	 A_Weave(soulhspeed,0,soulhdist,0);
	}
    Loop;
  Death:
    TNT1 A 0 A_StopSound(3);
	TNT1 A 0 A_SpawnItemEx("PM_BlueExplosionFlareSmall",0,0,0);
    TNT1 AAAA 0 A_SpawnProjectile("PM_AbhorSmallBall",0,0,random(0,360),CMF_OFFSETPITCH | CMF_TRACKOWNER,random(-80,80));
	TNT1 AAA 0 A_SpawnProjectile("AbhorBallExplode",0,0,random(0,360),2,random(0,360));
    SHBA CDEFGHIJKL 3 Bright Light("SoulHarvesterBall2");
    Stop;
  }
}

Class PM_AbhorSmallBall : PMProjectileBase
{
    Default
	{
    Radius 5;
    Height 5;
    Scale 0.3;
    Speed 3;
    Damage 1;
    Renderstyle "Add";
    Alpha 0.75;
    DeathSound "Abhor/SoulExp";
	Decal "PM_DeathSoulScorchSmall";
    PROJECTILE;
    +SEEKERMISSILE
	}
	
	override void PostBeginPlay()
	{
	 Super.PostBeginPlay();
	 tex[0] = TexMan.CheckForTexture("GNSMK0",TexMan.Type_Sprite);
	}
	
	TextureID tex[1];

  States
  {
  Spawn:
     TNT1 A 0;
     TNT1 A 0;
     TNT1 A 0 A_StartSound("Abhor/SoulExp",volume:0.25,pitch:frandom(0.4,0.3));
  Go:
    SHBA AABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABBAABB 1 Bright Light("HellsFurySoul3")
	{
	 A_SpawnParticleEx("0B3D94",tex[0],style: STYLE_Add,flags: SPF_ROLL|SPF_RELATIVE,lifetime: random(10,20),size: 15.0,xoff: -5,startalphaf: frandom(0.25,0.65),fadestepf: -1,startroll: random(-180,180));
	 A_SpawnParticleEx("143B76",tex[0],style: STYLE_Add,flags: SPF_ROLL|SPF_RELATIVE,lifetime: random(6,30),size: 20.0,xoff: -5,startalphaf: frandom(0.5,0.8),fadestepf: -1,startroll: random(-180,180));
	 A_Jump(7,"Death");
	 A_SeekerMissile(1,2);
	 A_Weave(1, 1, 1.5, 0);
	}
  Death:
    SHBA CDEFGHIJKL 4 Bright;
    Stop;
  }
}

Class PM_AbhorSoulVomit : PMProjectileBase
{
	int soulhspeed;
	int soulvspeed;
	int soulhdist;
	int soulvdist;
    Default
	{
    Radius 5;
    Height 5;
    Scale 0.4;
    Speed 12;
    DamageFunction 8;
	DamageType "Soul";
    Renderstyle "Add";
    Alpha 0.75;
    DeathSound "Abhor/SoulExp";
	Decal "PM_DeathSoulScorchMed";
    PROJECTILE;
    +SEEKERMISSILE
	}
	
	override void PostBeginPlay()
	{
	 Super.PostBeginPlay();
	 tex[0] = TexMan.CheckForTexture("GNSMK0",TexMan.Type_Sprite);
	 tex[1] = TexMan.CheckForTexture("SPKOS0",TexMan.Type_Sprite);
	}
	
	TextureID tex[2];

  States
  {
  Spawn:
	 TNT1 A 0 NoDelay
	 {
	  soulhspeed = random(-2,2);
	  soulvspeed = random(-2,2);
	  soulhdist = random(-3,3);
	  soulvdist = random(-3,3);
	 }
	 TNT1 A 0 { A_ScaleVelocity(frandom(0.4,2)); }
	 TNT1 A 0 A_StartSound("HFury/SoulScreech",pitch:frandom(0.6,1.2));
     TNT1 A 0
	 {
	  for(int i=random(2,4);i>0;i--)
	      A_SpawnParticleEx("0B3D94",tex[0],style: STYLE_Add,flags: SPF_ROLL|SPF_RELATIVE,lifetime: random(15,40),size: random(25,65),xoff: -5,velx: frandom(-0.45,0.45),vely: frandom(-0.45,0.45),velz: frandom(-0.45,0.45),accelx: frandom(0.25,0.95),accely: frandom(-0.15,0.15),accelz: frandom(-0.35,0.35),startalphaf: frandom(0.25,0.65),fadestepf: -1,sizestep: 2,startroll: random(-180,180),rollvel: random(-3,3));
	  for(int i=random(1,3);i>0;i--)
		  A_SpawnParticleEx("",tex[1],style: STYLE_Add,flags: SPF_RELATIVE|SPF_FULLBRIGHT|SPF_ROLL,lifetime: random(1,35),size: frandom(1,10),xoff: frandom(-1,1),yoff: frandom(-1,1),zoff: frandom(-1,1),velx: frandom(1,10),vely: frandom(-2,2),velz: frandom(-0.6,3),accelx: frandom(-0.005,0.005),accely: frandom(-0.005,0.005),accelz: frandom(-0.0,-0.8),startalphaf: 1.0,fadestepf: -0.5,sizestep: -0.2,startroll: random(-180,180));
	 }
  Go:
    SHBA AABB 1 Bright Light("HellsFurySoul2") 
	{
	if(random(1,20) == 1)
	SetStateLabel("WeaveReset");
	  A_SpawnParticleEx("0B3D94",tex[0],style: STYLE_Add,flags: SPF_ROLL|SPF_RELATIVE,lifetime: random(15,40),size: 20.0,xoff: -5,startalphaf: frandom(0.25,0.65),fadestepf: -1,startroll: random(-180,180));
	  A_SpawnParticleEx("143B76",tex[0],style: STYLE_Add,flags: SPF_ROLL|SPF_RELATIVE,lifetime: random(6,20),size: 35.0,xoff: -5,startalphaf: frandom(0.5,0.8),fadestepf: -1,startroll: random(-180,180));
	  A_Weave(soulhspeed,soulvspeed,soulhdist,soulvdist);
	}
    Loop;
  WeaveReset:
    TNT1 A 0
	{
	 soulhspeed = random(-2,2);
	 soulvspeed = random(-2,2);
	 soulhdist = random(-3,3);
	 soulvdist = random(-3,3);
	}
  Goto Go;
  Death:
    SHBA CDEFGHIJKL 4 Bright Light("HellsFurySoul3");
    Stop;
  }
}

Class PM_AbhorSoulVomitTrail : Actor
{
 Default
 {
  +CLIENTSIDEONLY
  +NOINTERACTION
  RenderStyle "Add";
  Alpha 0.75;
  Scale 0.4;
 }
States
{
Spawn:
    SHBA A 1 A_FadeOut(0.10);
    Loop;
    }
}

Class AbhorBallExplode : Actor
{
    Default
    {
	Scale 0.9;
	Damage 0;
	Projectile;
	Renderstyle "Add";
	+CLIENTSIDEONLY
	+NOINTERACTION
	+ROLLSPRITE
	+Bright
	Speed 3;
	}
	States
{
Spawn:
	TNT1 A 0 NoDelay A_SetRoll(random(0,360));
	FXPB AABBCDEFGHIJKLM 1 Bright A_FadeOut(0.04);
	Stop;
	}
}